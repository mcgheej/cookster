// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

html {
  @include mat.theme(
    (
      color: (
        primary: mat.$azure-palette,
        tertiary: mat.$blue-palette,
      ),
      typography: Roboto,
      density: 0,
    )
  );
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}

.main-toolbar {
  @include mat.toolbar-overrides(
    (
      container-background-color: var(--mat-sys-primary),
      container-text-color: white,
      // standard-height: 64px,
      // title-text-size: 22px,
       // title-text-line-height: 16px,
    )
  );
  @include mat.icon-overrides(
    (
      color: white,
    )
  );
}

:root {
  @include mat.icon-button-overrides(
    (
      icon-color: var(--mat-sys-primary),
      state-layer-color: var(--mat-sys-primary),
      // hover-color: var(--mat-sys-primary),
       // active-color: var(--mat-sys-primary),
    )
  );

  @include mat.dialog-overrides(
    (
      container-shape: 4px,
    )
  );

  @include mat.divider-overrides(
    (
      color: var(--mat-sys-outline-variant),
    )
  );
}

mat-divider {
  &.divider-dark {
    @include mat.divider-overrides(
      (
        color: var(--mat-sys-outline),
      )
    );
  }
  &.divider-thick {
    @include mat.divider-overrides(
      (
        // color: var(--mat-sys-outline),
        width: 2px
      )
    );
  }
}

mat-icon {
  &.primary-color {
    @include mat.icon-overrides(
      (
        color: var(--mat-sys-primary),
      )
    );
  }

  &.primary-container-color {
    @include mat.icon-overrides(
      (
        color: var(--mat-sys-primary-container),
      )
    );
  }

  &.primary-fixed-dim-color {
    @include mat.icon-overrides(
      (
        color: var(--mat-sys-primary-fixed-dim),
      )
    );
  }

  &.error-color {
    @include mat.icon-overrides(
      (
        color: var(--mat-sys-error),
      )
    );
  }
}

.divider-dark {
  // @include mat.divider-overrides(
  //   (
  //     color: var(--mat-sys-outline),
  //   )
  // );
  border-color: var(--mat-sys-outline);
}

.divider-thick {
  border-width: 2px;
}

[matIconButton].small {
  @include mat.icon-button-overrides(
    (
      icon-size: 24px,
      state-layer-size: 24px,
      touch-target-display: none,
    )
  );
  mat-icon {
    font-size: 16px;
    width: 24px;
    height: 24px;
    line-height: 24px;
  }
}
